import * as fs from "fs";
import * as path from "path";
import fetch from "node-fetch";
import * as lzstring from "lz-string";

const deviceListGithubUrl =
  "https://raw.githubusercontent.com/ChromeDevTools/devtools-frontend/master/front_end/emulated_devices/module.json";
const outPath = path.resolve(
  __dirname,
  "../src/devices/compressedInternalDeviceList.ts",
);

const updateDeviceList = async () => {
  const res = await fetch(deviceListGithubUrl);
  if (!res.ok) throw new Error(`Request failed: ${res.statusText}.`);

  const deviceList = await res.json();

  const compressedDevicesList = lzstring.compressToEncodedURIComponent(
    JSON.stringify(deviceList),
  );

  fs.writeFileSync(
    outPath,
    `
// AUTOGENERATED FILE, DO NOT EDIT
//
// Generated by tools/update-device-list.ts.
// NPM script: update-device-list
// Updated on: ${new Date().toUTCString()}
//
// Uses device list (module.json) from the ChromeDevTools project.
// https://github.com/ChromeDevTools/devtools-frontend/blob/master/LICENSE
// https://github.com/ChromeDevTools/devtools-frontend/blob/master/front_end/emulated_devices/module.json

const compressedInternalDeviceList =
  "${compressedDevicesList}";

export default compressedInternalDeviceList;
  `.trim() + "\n",
  );
};

updateDeviceList();
